{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.25.53.49325",
      "templateHash": "17024018679316419675"
    }
  },
  "parameters": {
    "organisationCode": {
      "type": "string",
      "defaultValue": "AWARE",
      "minLength": 2,
      "maxLength": 8,
      "metadata": {
        "description": "Organisation Code"
      }
    },
    "environment": {
      "type": "string",
      "defaultValue": "prod",
      "minLength": 3,
      "maxLength": 4,
      "metadata": {
        "description": "Environment"
      }
    },
    "applicationName": {
      "type": "string",
      "defaultValue": "chatcopilot",
      "minLength": 3,
      "maxLength": 11,
      "metadata": {
        "description": "Application Name"
      }
    },
    "includeHashInResourceName": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Include random hash in resource name?"
      }
    },
    "azureAdBackendClientId": {
      "type": "string"
    },
    "azureAdFrontendClientId": {
      "type": "string"
    },
    "azureAdInstance": {
      "type": "string",
      "defaultValue": "https://login.microsoftonline.com"
    },
    "azureAdTenantId": {
      "type": "string"
    },
    "appServiceFrontendPackageUri": {
      "type": "string",
      "defaultValue": "https://aware.to/tsi/frontendpackageuri",
      "metadata": {
        "description": "Location for application code to deploy"
      }
    },
    "appServiceMemoryPipelinePackageUri": {
      "type": "string",
      "defaultValue": "https://aware.to/tsi/memorypipelinepackageuri",
      "metadata": {
        "description": "Location for application code to deploy"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Resource location"
      }
    },
    "useExternalAzureOpenAIEndpoint": {
      "type": "bool",
      "defaultValue": false
    },
    "externalAzureOpenAIEndpoint": {
      "type": "string",
      "defaultValue": ""
    },
    "externalAzureOpenAIDeploymentName": {
      "type": "string",
      "defaultValue": ""
    },
    "externalAzureOpenAIEmbeddingDeploymentName": {
      "type": "string",
      "defaultValue": ""
    },
    "externalAzureOpenAIKey": {
      "type": "string",
      "defaultValue": ""
    }
  },
  "variables": {
    "uniqueStr": "[uniqueString(subscription().id, resourceGroup().id, 'chatcopilot')]",
    "resourcePrefix": "[toLower(format('{0}-{1}-{2}{3}', parameters('organisationCode'), parameters('environment'), parameters('applicationName'), if(parameters('includeHashInResourceName'), format('-{0}', substring(variables('uniqueStr'), 0, 4)), '')))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "Storage_Resources",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "resourcePrefix": {
            "value": "[variables('resourcePrefix')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "16868759819829908314"
            }
          },
          "parameters": {
            "resourcePrefix": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "variables": {
            "proposedStorageName": "[format('{0}storage', replace(parameters('resourcePrefix'), '-', ''))]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-09-01",
              "name": "[if(greater(length(variables('proposedStorageName')), 24), substring(variables('proposedStorageName'), 0, 24), variables('proposedStorageName'))]",
              "location": "[parameters('location')]",
              "kind": "StorageV2",
              "sku": {
                "name": "Standard_LRS"
              },
              "properties": {
                "minimumTlsVersion": "TLS1_2",
                "supportsHttpsTrafficOnly": true,
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}', if(greater(length(variables('proposedStorageName')), 24), substring(variables('proposedStorageName'), 0, 24), variables('proposedStorageName')), 'default')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', if(greater(length(variables('proposedStorageName')), 24), substring(variables('proposedStorageName'), 0, 24), variables('proposedStorageName')))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', if(greater(length(variables('proposedStorageName')), 24), substring(variables('proposedStorageName'), 0, 24), variables('proposedStorageName')), 'default', 'chatmemory')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', if(greater(length(variables('proposedStorageName')), 24), substring(variables('proposedStorageName'), 0, 24), variables('proposedStorageName')), 'default')]"
              ]
            }
          ],
          "outputs": {
            "storageAccountName": {
              "type": "string",
              "value": "[if(greater(length(variables('proposedStorageName')), 24), substring(variables('proposedStorageName'), 0, 24), variables('proposedStorageName'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "AI_Resources",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "resourcePrefix": {
            "value": "[variables('resourcePrefix')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "useExternalAzureOpenAIEndpoint": {
            "value": "[parameters('useExternalAzureOpenAIEndpoint')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "747298994817615965"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "resourcePrefix": {
              "type": "string"
            },
            "useExternalAzureOpenAIEndpoint": {
              "type": "bool"
            }
          },
          "variables": {
            "completionModel": "gpt-35-turbo",
            "embeddingModel": "text-embedding-ada-002"
          },
          "resources": [
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2022-12-01",
              "name": "[format('{0}-speech', parameters('resourcePrefix'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "S0"
              },
              "kind": "SpeechServices",
              "properties": {
                "customSubDomainName": "[format('{0}-speech', parameters('resourcePrefix'))]",
                "networkAcls": {
                  "defaultAction": "Allow"
                },
                "publicNetworkAccess": "Enabled"
              }
            },
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2022-12-01",
              "name": "[format('{0}-ocr', parameters('resourcePrefix'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "S0"
              },
              "kind": "FormRecognizer",
              "properties": {
                "customSubDomainName": "[format('{0}-ocr', parameters('resourcePrefix'))]",
                "networkAcls": {
                  "defaultAction": "Allow"
                },
                "publicNetworkAccess": "Enabled"
              }
            },
            {
              "type": "Microsoft.Search/searchServices",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-search', parameters('resourcePrefix'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "basic"
              },
              "properties": {
                "replicaCount": 1,
                "partitionCount": 1
              }
            },
            {
              "condition": "[equals(parameters('useExternalAzureOpenAIEndpoint'), false())]",
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2021-10-01",
              "name": "[format('{0}-oai', parameters('resourcePrefix'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "S0"
              },
              "kind": "OpenAI",
              "properties": {
                "customSubDomainName": "[format('{0}-oai', parameters('resourcePrefix'))]",
                "networkAcls": {
                  "defaultAction": "Allow"
                },
                "publicNetworkAccess": "Enabled",
                "apiProperties": {
                  "statisticsEnabled": false
                }
              }
            },
            {
              "condition": "[equals(parameters('useExternalAzureOpenAIEndpoint'), false())]",
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', format('{0}-oai', parameters('resourcePrefix')), variables('completionModel'))]",
              "sku": {
                "name": "Standard",
                "capacity": 30
              },
              "properties": {
                "model": {
                  "format": "OpenAI",
                  "name": "[variables('completionModel')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', format('{0}-oai', parameters('resourcePrefix')))]"
              ]
            },
            {
              "condition": "[equals(parameters('useExternalAzureOpenAIEndpoint'), false())]",
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', format('{0}-oai', parameters('resourcePrefix')), variables('embeddingModel'))]",
              "sku": {
                "name": "Standard",
                "capacity": 30
              },
              "properties": {
                "model": {
                  "format": "OpenAI",
                  "name": "[variables('embeddingModel')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', format('{0}-oai', parameters('resourcePrefix')))]",
                "[resourceId('Microsoft.CognitiveServices/accounts/deployments', format('{0}-oai', parameters('resourcePrefix')), variables('completionModel'))]"
              ]
            }
          ],
          "outputs": {
            "speechAccountName": {
              "type": "string",
              "value": "[format('{0}-speech', parameters('resourcePrefix'))]"
            },
            "documentIntelligenceAccountName": {
              "type": "string",
              "value": "[format('{0}-ocr', parameters('resourcePrefix'))]"
            },
            "aiSearchAccountName": {
              "type": "string",
              "value": "[format('{0}-search', parameters('resourcePrefix'))]"
            },
            "azureOpenAIAccountName": {
              "type": "string",
              "value": "[if(parameters('useExternalAzureOpenAIEndpoint'), '', format('{0}-oai', parameters('resourcePrefix')))]"
            },
            "azureOpenAIEndpoint": {
              "type": "string",
              "value": "[if(parameters('useExternalAzureOpenAIEndpoint'), '', reference(resourceId('Microsoft.CognitiveServices/accounts', format('{0}-oai', parameters('resourcePrefix'))), '2021-10-01').endpoint)]"
            },
            "azureOpenAIKey": {
              "type": "string",
              "value": "[if(parameters('useExternalAzureOpenAIEndpoint'), '', listKeys(resourceId('Microsoft.CognitiveServices/accounts', format('{0}-oai', parameters('resourcePrefix'))), '2021-10-01').key1)]"
            },
            "azureOpenAIDeploymentName": {
              "type": "string",
              "value": "[if(parameters('useExternalAzureOpenAIEndpoint'), '', variables('completionModel'))]"
            },
            "azureOpenAIEmbeddingDeploymentName": {
              "type": "string",
              "value": "[if(parameters('useExternalAzureOpenAIEndpoint'), '', variables('embeddingModel'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "Cosmos_Resources",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "resourcePrefix": {
            "value": "[variables('resourcePrefix')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "9110737879864768558"
            }
          },
          "parameters": {
            "resourcePrefix": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.DocumentDB/databaseAccounts",
              "apiVersion": "2023-04-15",
              "name": "[format('{0}-cosmos', parameters('resourcePrefix'))]",
              "location": "[parameters('location')]",
              "kind": "GlobalDocumentDB",
              "properties": {
                "consistencyPolicy": {
                  "defaultConsistencyLevel": "Session"
                },
                "locations": [
                  {
                    "locationName": "[parameters('location')]",
                    "failoverPriority": 0,
                    "isZoneRedundant": false
                  }
                ],
                "databaseAccountOfferType": "Standard"
              },
              "identity": {
                "type": "SystemAssigned"
              }
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
              "apiVersion": "2023-04-15",
              "name": "[format('{0}/{1}', format('{0}-cosmos', parameters('resourcePrefix')), 'CopilotChat')]",
              "properties": {
                "resource": {
                  "id": "CopilotChat"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', format('{0}-cosmos', parameters('resourcePrefix')))]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
              "apiVersion": "2023-04-15",
              "name": "[format('{0}/{1}/{2}', format('{0}-cosmos', parameters('resourcePrefix')), 'CopilotChat', 'chatmessages')]",
              "properties": {
                "resource": {
                  "id": "chatmessages",
                  "indexingPolicy": {
                    "indexingMode": "consistent",
                    "automatic": true,
                    "includedPaths": [
                      {
                        "path": "/*"
                      }
                    ],
                    "excludedPaths": [
                      {
                        "path": "/\"_etag\"/?"
                      }
                    ]
                  },
                  "partitionKey": {
                    "paths": [
                      "/chatId"
                    ],
                    "kind": "Hash",
                    "version": 2
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', format('{0}-cosmos', parameters('resourcePrefix')), 'CopilotChat')]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
              "apiVersion": "2023-04-15",
              "name": "[format('{0}/{1}/{2}', format('{0}-cosmos', parameters('resourcePrefix')), 'CopilotChat', 'chatsessions')]",
              "properties": {
                "resource": {
                  "id": "chatsessions",
                  "indexingPolicy": {
                    "indexingMode": "consistent",
                    "automatic": true,
                    "includedPaths": [
                      {
                        "path": "/*"
                      }
                    ],
                    "excludedPaths": [
                      {
                        "path": "/\"_etag\"/?"
                      }
                    ]
                  },
                  "partitionKey": {
                    "paths": [
                      "/id"
                    ],
                    "kind": "Hash",
                    "version": 2
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', format('{0}-cosmos', parameters('resourcePrefix')), 'CopilotChat')]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
              "apiVersion": "2023-04-15",
              "name": "[format('{0}/{1}/{2}', format('{0}-cosmos', parameters('resourcePrefix')), 'CopilotChat', 'chatparticipants')]",
              "properties": {
                "resource": {
                  "id": "chatparticipants",
                  "indexingPolicy": {
                    "indexingMode": "consistent",
                    "automatic": true,
                    "includedPaths": [
                      {
                        "path": "/*"
                      }
                    ],
                    "excludedPaths": [
                      {
                        "path": "/\"_etag\"/?"
                      }
                    ]
                  },
                  "partitionKey": {
                    "paths": [
                      "/userId"
                    ],
                    "kind": "Hash",
                    "version": 2
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', format('{0}-cosmos', parameters('resourcePrefix')), 'CopilotChat')]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
              "apiVersion": "2023-04-15",
              "name": "[format('{0}/{1}/{2}', format('{0}-cosmos', parameters('resourcePrefix')), 'CopilotChat', 'chatmemorysources')]",
              "properties": {
                "resource": {
                  "id": "chatmemorysources",
                  "indexingPolicy": {
                    "indexingMode": "consistent",
                    "automatic": true,
                    "includedPaths": [
                      {
                        "path": "/*"
                      }
                    ],
                    "excludedPaths": [
                      {
                        "path": "/\"_etag\"/?"
                      }
                    ]
                  },
                  "partitionKey": {
                    "paths": [
                      "/chatId"
                    ],
                    "kind": "Hash",
                    "version": 2
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', format('{0}-cosmos', parameters('resourcePrefix')), 'CopilotChat')]"
              ]
            }
          ],
          "outputs": {
            "cosmosAccountName": {
              "type": "string",
              "value": "[format('{0}-cosmos', parameters('resourcePrefix'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "Web_Resources",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "resourcePrefix": {
            "value": "[variables('resourcePrefix')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "1249068412761690691"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "resourcePrefix": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}-asp', parameters('resourcePrefix'))]",
              "location": "[parameters('location')]",
              "kind": "app",
              "sku": {
                "name": "P1V3"
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-web', parameters('resourcePrefix'))]",
              "location": "[parameters('location')]",
              "kind": "app",
              "tags": {
                "skweb": "1",
                "applicationRole": "frontend"
              },
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('{0}-asp', parameters('resourcePrefix')))]",
                "httpsOnly": true,
                "siteConfig": {
                  "http20Enabled": true,
                  "alwaysOn": false,
                  "cors": {
                    "allowedOrigins": [
                      "http://localhost:3000",
                      "https://localhost:3000"
                    ],
                    "supportCredentials": true
                  },
                  "detailedErrorLoggingEnabled": true,
                  "minTlsVersion": "1.2",
                  "netFrameworkVersion": "v6.0",
                  "use32BitWorkerProcess": false,
                  "vnetRouteAllEnabled": true,
                  "webSocketsEnabled": true
                }
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', format('{0}-asp', parameters('resourcePrefix')))]"
              ]
            }
          ],
          "outputs": {
            "appServicePlanId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Web/serverfarms', format('{0}-asp', parameters('resourcePrefix')))]"
            },
            "appServiceFrontendName": {
              "type": "string",
              "value": "[format('{0}-web', parameters('resourcePrefix'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "Log_Resources",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "resourcePrefix": {
            "value": "[variables('resourcePrefix')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "appServiceFrontendName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'Web_Resources'), '2022-09-01').outputs.appServiceFrontendName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "5306466595066870338"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "resourcePrefix": {
              "type": "string"
            },
            "appServiceFrontendName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites/siteextensions",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', parameters('appServiceFrontendName'), 'Microsoft.ApplicationInsights.AzureWebSites')]"
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2022-10-01",
              "name": "[format('{0}-la', parameters('resourcePrefix'))]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                },
                "retentionInDays": 90,
                "features": {
                  "searchVersion": 1,
                  "legacy": 0,
                  "enableLogAccessUsingOnlyResourcePermissions": true
                }
              }
            },
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[format('{0}-ai', parameters('resourcePrefix'))]",
              "location": "[parameters('location')]",
              "kind": "string",
              "properties": {
                "Application_Type": "web",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-la', parameters('resourcePrefix')))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-la', parameters('resourcePrefix')))]"
              ]
            }
          ],
          "outputs": {
            "appInsightsName": {
              "type": "string",
              "value": "[format('{0}-ai', parameters('resourcePrefix'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'Web_Resources')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "KeyVault_Resources",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "resourcePrefix": {
            "value": "[variables('resourcePrefix')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "cosmosAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'Cosmos_Resources'), '2022-09-01').outputs.cosmosAccountName.value]"
          },
          "aiSearchAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'AI_Resources'), '2022-09-01').outputs.aiSearchAccountName.value]"
          },
          "speechAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'AI_Resources'), '2022-09-01').outputs.speechAccountName.value]"
          },
          "documentIntelligenceAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'AI_Resources'), '2022-09-01').outputs.documentIntelligenceAccountName.value]"
          },
          "appServiceFrontendName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'Web_Resources'), '2022-09-01').outputs.appServiceFrontendName.value]"
          },
          "storageAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'Storage_Resources'), '2022-09-01').outputs.storageAccountName.value]"
          },
          "azureOpenAIKey": "[if(parameters('useExternalAzureOpenAIEndpoint'), createObject('value', parameters('externalAzureOpenAIKey')), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'AI_Resources'), '2022-09-01').outputs.azureOpenAIEndpoint.value))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "10003418918995903976"
            }
          },
          "parameters": {
            "resourcePrefix": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "appServiceFrontendName": {
              "type": "string"
            },
            "documentIntelligenceAccountName": {
              "type": "string"
            },
            "cosmosAccountName": {
              "type": "string"
            },
            "speechAccountName": {
              "type": "string"
            },
            "aiSearchAccountName": {
              "type": "string"
            },
            "storageAccountName": {
              "type": "string"
            },
            "azureOpenAIKey": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}-kv', parameters('resourcePrefix'))]",
              "location": "[parameters('location')]",
              "properties": {
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "tenantId": "[subscription().tenantId]",
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "enableRbacAuthorization": true,
                "sku": {
                  "name": "standard",
                  "family": "A"
                },
                "networkAcls": {
                  "defaultAction": "Allow",
                  "bypass": "AzureServices"
                }
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', format('{0}-kv', parameters('resourcePrefix')), format('{0}-cosmosdb-connection-string', parameters('resourcePrefix')))]",
              "properties": {
                "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosAccountName')), '2023-04-15').connectionStrings[0].connectionString]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', format('{0}-kv', parameters('resourcePrefix')))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', format('{0}-kv', parameters('resourcePrefix')), format('{0}-aisearch-apikey', parameters('resourcePrefix')))]",
              "properties": {
                "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices', parameters('aiSearchAccountName')), '2022-09-01').primaryKey]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', format('{0}-kv', parameters('resourcePrefix')))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', format('{0}-kv', parameters('resourcePrefix')), format('{0}-storage-connection-string', parameters('resourcePrefix')))]",
              "properties": {
                "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-09-01').keys[1].value)]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', format('{0}-kv', parameters('resourcePrefix')))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', format('{0}-kv', parameters('resourcePrefix')), format('{0}-documentintelligence-apikey', parameters('resourcePrefix')))]",
              "properties": {
                "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('documentIntelligenceAccountName')), '2022-12-01').key1]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', format('{0}-kv', parameters('resourcePrefix')))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', format('{0}-kv', parameters('resourcePrefix')), format('{0}-openai-apikey', parameters('resourcePrefix')))]",
              "properties": {
                "value": "[parameters('azureOpenAIKey')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', format('{0}-kv', parameters('resourcePrefix')))]"
              ]
            }
          ],
          "outputs": {
            "keyVaultName": {
              "type": "string",
              "value": "[format('{0}-kv', parameters('resourcePrefix'))]"
            },
            "cosmosDbSecretName": {
              "type": "string",
              "value": "[format('{0}-cosmosdb-connection-string', parameters('resourcePrefix'))]"
            },
            "aiSearchSecretName": {
              "type": "string",
              "value": "[format('{0}-aisearch-apikey', parameters('resourcePrefix'))]"
            },
            "storageAccountSecretName": {
              "type": "string",
              "value": "[format('{0}-storage-connection-string', parameters('resourcePrefix'))]"
            },
            "documentIntelligenceSecretName": {
              "type": "string",
              "value": "[format('{0}-documentintelligence-apikey', parameters('resourcePrefix'))]"
            },
            "openAISecretName": {
              "type": "string",
              "value": "[format('{0}-openai-apikey', parameters('resourcePrefix'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'AI_Resources')]",
        "[resourceId('Microsoft.Resources/deployments', 'Cosmos_Resources')]",
        "[resourceId('Microsoft.Resources/deployments', 'Storage_Resources')]",
        "[resourceId('Microsoft.Resources/deployments', 'Web_Resources')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "Code_Deploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "azureAdBackendClientId": {
            "value": "[parameters('azureAdBackendClientId')]"
          },
          "azureAdFrontendClientId": {
            "value": "[parameters('azureAdFrontendClientId')]"
          },
          "azureAdInstance": {
            "value": "[parameters('azureAdInstance')]"
          },
          "azureAdTenantId": {
            "value": "[parameters('azureAdTenantId')]"
          },
          "keyVaultName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'KeyVault_Resources'), '2022-09-01').outputs.keyVaultName.value]"
          },
          "appServiceFrontendName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'Web_Resources'), '2022-09-01').outputs.appServiceFrontendName.value]"
          },
          "appServiceFrontendPackageUri": {
            "value": "[parameters('appServiceFrontendPackageUri')]"
          },
          "storageAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'Storage_Resources'), '2022-09-01').outputs.storageAccountName.value]"
          },
          "storageAccountSecretName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'KeyVault_Resources'), '2022-09-01').outputs.storageAccountSecretName.value]"
          },
          "aiSearchAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'AI_Resources'), '2022-09-01').outputs.aiSearchAccountName.value]"
          },
          "aiSearchSecretName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'KeyVault_Resources'), '2022-09-01').outputs.aiSearchSecretName.value]"
          },
          "appInsightsName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'Log_Resources'), '2022-09-01').outputs.appInsightsName.value]"
          },
          "documentIntelligenceAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'AI_Resources'), '2022-09-01').outputs.documentIntelligenceAccountName.value]"
          },
          "documentIntelligenceSecretName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'KeyVault_Resources'), '2022-09-01').outputs.documentIntelligenceSecretName.value]"
          },
          "cosmosAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'Cosmos_Resources'), '2022-09-01').outputs.cosmosAccountName.value]"
          },
          "cosmosDbSecretName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'KeyVault_Resources'), '2022-09-01').outputs.cosmosDbSecretName.value]"
          },
          "speechAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'AI_Resources'), '2022-09-01').outputs.speechAccountName.value]"
          },
          "azureOpenAIEmbeddingDeploymentName": "[if(parameters('useExternalAzureOpenAIEndpoint'), createObject('value', parameters('externalAzureOpenAIEmbeddingDeploymentName')), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'AI_Resources'), '2022-09-01').outputs.azureOpenAIEmbeddingDeploymentName.value))]",
          "azureOpenAIEndpoint": "[if(parameters('useExternalAzureOpenAIEndpoint'), createObject('value', parameters('externalAzureOpenAIEndpoint')), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'AI_Resources'), '2022-09-01').outputs.azureOpenAIEndpoint.value))]",
          "azureOpenAIDeploymentName": "[if(parameters('useExternalAzureOpenAIEndpoint'), createObject('value', parameters('externalAzureOpenAIDeploymentName')), createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'AI_Resources'), '2022-09-01').outputs.azureOpenAIDeploymentName.value))]",
          "azureOpenAIKeySecretName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'KeyVault_Resources'), '2022-09-01').outputs.openAISecretName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "12203081502070300847"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "appServiceFrontendName": {
              "type": "string"
            },
            "appServiceFrontendPackageUri": {
              "type": "string"
            },
            "storageAccountName": {
              "type": "string"
            },
            "storageAccountSecretName": {
              "type": "string"
            },
            "aiSearchAccountName": {
              "type": "string"
            },
            "aiSearchSecretName": {
              "type": "string"
            },
            "appInsightsName": {
              "type": "string"
            },
            "documentIntelligenceAccountName": {
              "type": "string"
            },
            "documentIntelligenceSecretName": {
              "type": "string"
            },
            "cosmosAccountName": {
              "type": "string"
            },
            "cosmosDbSecretName": {
              "type": "string"
            },
            "speechAccountName": {
              "type": "string"
            },
            "keyVaultName": {
              "type": "string"
            },
            "azureAdInstance": {
              "type": "string"
            },
            "azureAdTenantId": {
              "type": "string"
            },
            "azureAdFrontendClientId": {
              "type": "string"
            },
            "azureAdBackendClientId": {
              "type": "string"
            },
            "azureOpenAIEndpoint": {
              "type": "string"
            },
            "azureOpenAIDeploymentName": {
              "type": "string"
            },
            "azureOpenAIEmbeddingDeploymentName": {
              "type": "string"
            },
            "azureOpenAIKeySecretName": {
              "type": "string"
            }
          },
          "variables": {
            "aiService": "AzureOpenAI",
            "memoryStore": "AzureCognitiveSearch"
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites/extensions",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', parameters('appServiceFrontendName'), 'onedeploy')]",
              "properties": {
                "type": "zip",
                "clean": true,
                "packageUri": "[parameters('appServiceFrontendPackageUri')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites/config', parameters('appServiceFrontendName'), 'web')]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', parameters('appServiceFrontendName'), 'web')]",
              "properties": {
                "appSettings": "[union(createArray(), createArray(createObject('name', 'Authentication__Type', 'value', 'AzureAd'), createObject('name', 'Authentication__AzureAd__Instance', 'value', parameters('azureAdInstance')), createObject('name', 'Authentication__AzureAd__TenantId', 'value', parameters('azureAdTenantId')), createObject('name', 'Authentication__AzureAd__ClientId', 'value', parameters('azureAdBackendClientId')), createObject('name', 'Frontend__AadClientId', 'value', parameters('azureAdFrontendClientId')), createObject('name', 'Authentication__AzureAd__Scopes', 'value', 'access_as_user'), createObject('name', 'Planner__Model', 'value', 'gpt-35-turbo'), createObject('name', 'ChatStore__Type', 'value', 'cosmos'), createObject('name', 'ChatStore__Cosmos__Database', 'value', 'CopilotChat'), createObject('name', 'ChatStore__Cosmos__ChatSessionsContainer', 'value', 'chatsessions'), createObject('name', 'ChatStore__Cosmos__ChatMessagesContainer', 'value', 'chatmessages'), createObject('name', 'ChatStore__Cosmos__ChatMemorySourcesContainer', 'value', 'chatmemorysources'), createObject('name', 'ChatStore__Cosmos__ChatParticipantsContainer', 'value', 'chatparticipants'), createObject('name', 'ChatStore__Cosmos__ConnectionString', 'value', format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', parameters('keyVaultName'), parameters('cosmosDbSecretName'))), createObject('name', 'AzureSpeech__Region', 'value', reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('speechAccountName')), '2022-12-01', 'full').location), createObject('name', 'AzureSpeech__Key', 'value', listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('speechAccountName')), '2022-12-01').key1), createObject('name', 'AllowedOrigins', 'value', '[*]'), createObject('name', 'Kestrel__Endpoints__Https__Url', 'value', 'https://localhost__443'), createObject('name', 'Logging__LogLevel__Default', 'value', 'Warning'), createObject('name', 'Logging__LogLevel__CopilotChat.WebApi', 'value', 'Warning'), createObject('name', 'Logging__LogLevel__Microsoft.SemanticKernel', 'value', 'Warning'), createObject('name', 'Logging__LogLevel__Microsoft.AspNetCore.Hosting', 'value', 'Warning'), createObject('name', 'Logging__LogLevel__Microsoft.Hosting.Lifetimel', 'value', 'Warning'), createObject('name', 'Logging__ApplicationInsights__LogLevel__Default', 'value', 'Warning'), createObject('name', 'KernelMemory__ContentStorageType', 'value', 'AzureBlobs'), createObject('name', 'KernelMemory__TextGeneratorType', 'value', variables('aiService')), createObject('name', 'KernelMemory__DataIngestion__OrchestrationType', 'value', 'InProcess'), createObject('name', 'KernelMemory__DataIngestion__DistributedOrchestration__QueueType', 'value', 'AzureQueue'), createObject('name', 'KernelMemory__DataIngestion__EmbeddingGeneratorTypes__0', 'value', variables('aiService')), createObject('name', 'KernelMemory__DataIngestion__VectorDbTypes__0', 'value', variables('memoryStore')), createObject('name', 'KernelMemory__Retrieval__VectorDbType', 'value', variables('memoryStore')), createObject('name', 'KernelMemory__Retrieval__EmbeddingGeneratorType', 'value', variables('aiService')), createObject('name', 'KernelMemory__Services__AzureBlobs__Auth', 'value', 'APIKey'), createObject('name', 'KernelMemory__Services__AzureBlobs__Account', 'value', parameters('storageAccountName')), createObject('name', 'KernelMemory__Services__AzureBlobs__ConnectionString', 'value', format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', parameters('keyVaultName'), parameters('storageAccountSecretName'))), createObject('name', 'KernelMemory__Services__AzureBlobs__Container', 'value', 'chatmemory'), createObject('name', 'KernelMemory__Services__AzureQueue__Auth', 'value', 'APIKey'), createObject('name', 'KernelMemory__Services__AzureQueue__ConnectionString', 'value', format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', parameters('keyVaultName'), parameters('storageAccountSecretName'))), createObject('name', 'KernelMemory__Services__AzureCognitiveSearch__Auth', 'value', 'APIKey'), createObject('name', 'KernelMemory__Services__AzureCognitiveSearch__Endpoint', 'value', format('https://{0}.search.windows.net', parameters('aiSearchAccountName'))), createObject('name', 'KernelMemory__Services__AzureCognitiveSearch__APIKey', 'value', format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', parameters('keyVaultName'), parameters('aiSearchSecretName'))), createObject('name', 'KernelMemory__Services__AzureOpenAIText__Auth', 'value', 'ApiKey'), createObject('name', 'KernelMemory__Services__AzureOpenAIText__Endpoint', 'value', parameters('azureOpenAIEndpoint')), createObject('name', 'KernelMemory__Services__AzureOpenAIText__APIKey', 'value', format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', parameters('keyVaultName'), parameters('azureOpenAIKeySecretName'))), createObject('name', 'KernelMemory__Services__AzureOpenAIText__Deployment', 'value', parameters('azureOpenAIDeploymentName')), createObject('name', 'KernelMemory__Services__AzureOpenAIEmbedding__Auth', 'value', 'ApiKey'), createObject('name', 'KernelMemory__Services__AzureOpenAIEmbedding__Endpoint', 'value', parameters('azureOpenAIEndpoint')), createObject('name', 'KernelMemory__Services__AzureOpenAIEmbedding__APIKey', 'value', format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', parameters('keyVaultName'), parameters('azureOpenAIKeySecretName'))), createObject('name', 'KernelMemory__Services__AzureOpenAIEmbedding__Deployment', 'value', parameters('azureOpenAIEmbeddingDeploymentName')), createObject('name', 'KernelMemory__Services__OpenAI__TextModel', 'value', parameters('azureOpenAIDeploymentName')), createObject('name', 'KernelMemory__Services__OpenAI__EmbeddingModel', 'value', parameters('azureOpenAIEmbeddingDeploymentName')), createObject('name', 'KernelMemory__Services__OpenAI__APIKey', 'value', format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', parameters('keyVaultName'), parameters('azureOpenAIKeySecretName'))), createObject('name', 'KernelMemory__Services__AzureFormRecognizer__Auth', 'value', 'APIKey'), createObject('name', 'KernelMemory__Services__AzureFormRecognizer__APIKey', 'value', format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', parameters('keyVaultName'), parameters('documentIntelligenceSecretName'))), createObject('name', 'KernelMemory__Services__AzureFormRecognizer__Endpoint', 'value', reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('documentIntelligenceAccountName')), '2022-12-01').endpoint), createObject('name', 'KernelMemory__ImageOcrType', 'value', 'AzureFormRecognizer'), createObject('name', 'DocumentMemory__FileSizeLimit', 'value', '50000000'), createObject('name', 'DocumentMemory__FileCountLimit', 'value', '50'), createObject('name', 'APPLICATIONINSIGHTS_CONNECTION_STRING', 'value', reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').ConnectionString), createObject('name', 'ApplicationInsightsAgent_EXTENSION_VERSION', 'value', '~2'), createObject('name', 'WEBSITE_RUN_FROM_PACKAGE', 'value', '1')))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'AI_Resources')]",
        "[resourceId('Microsoft.Resources/deployments', 'Cosmos_Resources')]",
        "[resourceId('Microsoft.Resources/deployments', 'KeyVault_Resources')]",
        "[resourceId('Microsoft.Resources/deployments', 'Log_Resources')]",
        "[resourceId('Microsoft.Resources/deployments', 'Storage_Resources')]",
        "[resourceId('Microsoft.Resources/deployments', 'Web_Resources')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "Managed_Identity",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appServiceFrontendName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'Web_Resources'), '2022-09-01').outputs.appServiceFrontendName.value]"
          },
          "cosmosAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'Cosmos_Resources'), '2022-09-01').outputs.cosmosAccountName.value]"
          },
          "aiSearchAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'AI_Resources'), '2022-09-01').outputs.aiSearchAccountName.value]"
          },
          "storageAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'Storage_Resources'), '2022-09-01').outputs.storageAccountName.value]"
          },
          "azureDocumentIntelligenceAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'AI_Resources'), '2022-09-01').outputs.documentIntelligenceAccountName.value]"
          },
          "azureSpeechAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'AI_Resources'), '2022-09-01').outputs.speechAccountName.value]"
          },
          "keyVaultName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'KeyVault_Resources'), '2022-09-01').outputs.keyVaultName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "15177057279049978488"
            }
          },
          "parameters": {
            "cosmosAccountName": {
              "type": "string"
            },
            "appServiceFrontendName": {
              "type": "string"
            },
            "storageAccountName": {
              "type": "string"
            },
            "aiSearchAccountName": {
              "type": "string"
            },
            "azureSpeechAccountName": {
              "type": "string"
            },
            "azureDocumentIntelligenceAccountName": {
              "type": "string"
            },
            "keyVaultName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.DocumentDB/databaseAccounts/{0}', parameters('cosmosAccountName'))]",
              "name": "[guid(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosAccountName')), extensionResourceId(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosAccountName')), 'Microsoft.Authorization/roleDefinitions', '5bd9cd88-fe45-4216-938b-f97437e15450'), resourceId('Microsoft.Web/sites', parameters('appServiceFrontendName')))]",
              "properties": {
                "roleDefinitionId": "[extensionResourceId(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosAccountName')), 'Microsoft.Authorization/roleDefinitions', '5bd9cd88-fe45-4216-938b-f97437e15450')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('appServiceFrontendName')), '2022-09-01', 'full').identity.principalId]"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
              "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), extensionResourceId(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), 'Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe'), resourceId('Microsoft.Web/sites', parameters('appServiceFrontendName')))]",
              "properties": {
                "roleDefinitionId": "[extensionResourceId(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), 'Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('appServiceFrontendName')), '2022-09-01', 'full').identity.principalId]"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
              "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), extensionResourceId(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), 'Microsoft.Authorization/roleDefinitions', '974c5e8b-45b9-4653-ba55-5f855dd0fb88'), resourceId('Microsoft.Web/sites', parameters('appServiceFrontendName')))]",
              "properties": {
                "roleDefinitionId": "[extensionResourceId(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), 'Microsoft.Authorization/roleDefinitions', '974c5e8b-45b9-4653-ba55-5f855dd0fb88')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('appServiceFrontendName')), '2022-09-01', 'full').identity.principalId]"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Search/searchServices/{0}', parameters('aiSearchAccountName'))]",
              "name": "[guid(resourceGroup().id, extensionResourceId(resourceId('Microsoft.Search/searchServices', parameters('aiSearchAccountName')), 'Microsoft.Authorization/roleDefinitions', '8ebe5a00-799e-43f5-93ac-243d3dce84a7'), resourceId('Microsoft.Web/sites', parameters('appServiceFrontendName')))]",
              "properties": {
                "roleDefinitionId": "[extensionResourceId(resourceId('Microsoft.Search/searchServices', parameters('aiSearchAccountName')), 'Microsoft.Authorization/roleDefinitions', '8ebe5a00-799e-43f5-93ac-243d3dce84a7')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('appServiceFrontendName')), '2022-09-01', 'full').identity.principalId]"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Search/searchServices/{0}', parameters('aiSearchAccountName'))]",
              "name": "[guid(resourceGroup().id, extensionResourceId(resourceId('Microsoft.Search/searchServices', parameters('aiSearchAccountName')), 'Microsoft.Authorization/roleDefinitions', '7ca78c08-252a-4471-8644-bb5ff32d4ba0'), resourceId('Microsoft.Web/sites', parameters('appServiceFrontendName')))]",
              "properties": {
                "roleDefinitionId": "[extensionResourceId(resourceId('Microsoft.Search/searchServices', parameters('aiSearchAccountName')), 'Microsoft.Authorization/roleDefinitions', '7ca78c08-252a-4471-8644-bb5ff32d4ba0')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('appServiceFrontendName')), '2022-09-01', 'full').identity.principalId]"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.CognitiveServices/accounts/{0}', parameters('azureSpeechAccountName'))]",
              "name": "[guid(resourceGroup().id, extensionResourceId(resourceId('Microsoft.CognitiveServices/accounts', parameters('azureSpeechAccountName')), 'Microsoft.Authorization/roleDefinitions', '25fbc0a9-bd7c-42a3-aa1a-3b75d497ee68'), resourceId('Microsoft.Web/sites', parameters('appServiceFrontendName')))]",
              "properties": {
                "roleDefinitionId": "[extensionResourceId(resourceId('Microsoft.CognitiveServices/accounts', parameters('azureSpeechAccountName')), 'Microsoft.Authorization/roleDefinitions', '25fbc0a9-bd7c-42a3-aa1a-3b75d497ee68')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('appServiceFrontendName')), '2022-09-01', 'full').identity.principalId]"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.CognitiveServices/accounts/{0}', parameters('azureDocumentIntelligenceAccountName'))]",
              "name": "[guid(resourceGroup().id, extensionResourceId(resourceId('Microsoft.CognitiveServices/accounts', parameters('azureDocumentIntelligenceAccountName')), 'Microsoft.Authorization/roleDefinitions', '25fbc0a9-bd7c-42a3-aa1a-3b75d497ee68'), resourceId('Microsoft.Web/sites', parameters('appServiceFrontendName')))]",
              "properties": {
                "roleDefinitionId": "[extensionResourceId(resourceId('Microsoft.CognitiveServices/accounts', parameters('azureDocumentIntelligenceAccountName')), 'Microsoft.Authorization/roleDefinitions', '25fbc0a9-bd7c-42a3-aa1a-3b75d497ee68')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('appServiceFrontendName')), '2022-09-01', 'full').identity.principalId]"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
              "name": "[guid(resourceGroup().id, resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), resourceId('Microsoft.Web/sites', parameters('appServiceFrontendName')))]",
              "properties": {
                "roleDefinitionId": "[extensionResourceId(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), 'Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('appServiceFrontendName')), '2022-09-01', 'full').identity.principalId]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'AI_Resources')]",
        "[resourceId('Microsoft.Resources/deployments', 'Cosmos_Resources')]",
        "[resourceId('Microsoft.Resources/deployments', 'KeyVault_Resources')]",
        "[resourceId('Microsoft.Resources/deployments', 'Storage_Resources')]",
        "[resourceId('Microsoft.Resources/deployments', 'Web_Resources')]"
      ]
    }
  ],
  "outputs": {
    "uniqueStr": {
      "type": "string",
      "value": "[variables('uniqueStr')]"
    },
    "resourcePrefix": {
      "type": "string",
      "value": "[variables('resourcePrefix')]"
    }
  }
}